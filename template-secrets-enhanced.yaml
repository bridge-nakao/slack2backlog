# Enhanced Secrets Manager configurations to be integrated with main template
Resources:
  # Slack credentials secret
  SlackSecrets:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${AWS::StackName}-slack-secrets-${Stage}
      Description: Slack Bot Token and Signing Secret for slack2backlog
      SecretString: !Sub |
        {
          "bot_token": "${SlackBotToken}",
          "signing_secret": "${SlackSigningSecret}"
        }
      KmsKeyId: alias/aws/secretsmanager
      Tags:
        - Key: Environment
          Value: !Ref Stage
        - Key: Application
          Value: slack2backlog
        - Key: Type
          Value: credentials

  # Backlog credentials secret
  BacklogSecrets:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${AWS::StackName}-backlog-secrets-${Stage}
      Description: Backlog API credentials for slack2backlog
      SecretString: !Sub |
        {
          "api_key": "${BacklogApiKey}",
          "space_id": "${BacklogSpaceId}"
        }
      KmsKeyId: alias/aws/secretsmanager
      Tags:
        - Key: Environment
          Value: !Ref Stage
        - Key: Application
          Value: slack2backlog
        - Key: Type
          Value: credentials

  # Secret rotation Lambda (optional, for future implementation)
  SecretRotationLambda:
    Type: AWS::SecretsManager::RotationSchedule
    Condition: EnableRotation
    Properties:
      SecretId: !Ref SlackSecrets
      RotationRules:
        AutomaticallyAfterDays: 90
      RotationLambdaARN: !GetAtt SecretRotationFunction.Arn

  # Resource policies for secrets
  SlackSecretsResourcePolicy:
    Type: AWS::SecretsManager::ResourcePolicy
    Properties:
      SecretId: !Ref SlackSecrets
      ResourcePolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowLambdaAccess
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt EventIngestFunctionRole.Arn
                - !GetAtt BacklogWorkerFunctionRole.Arn
            Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Resource: '*'

  BacklogSecretsResourcePolicy:
    Type: AWS::SecretsManager::ResourcePolicy
    Properties:
      SecretId: !Ref BacklogSecrets
      ResourcePolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowLambdaAccess
            Effect: Allow
            Principal:
              AWS: !GetAtt BacklogWorkerFunctionRole.Arn
            Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Resource: '*'

# Parameters for initial secret values
Parameters:
  SlackBotToken:
    Type: String
    NoEcho: true
    Default: "xoxb-your-token-here"
    Description: Slack Bot User OAuth Token

  SlackSigningSecret:
    Type: String
    NoEcho: true
    Default: "your-signing-secret-here"
    Description: Slack Signing Secret

  BacklogApiKey:
    Type: String
    NoEcho: true
    Default: "your-backlog-api-key-here"
    Description: Backlog API Key

  BacklogSpaceId:
    Type: String
    Default: "your-space-id"
    Description: Backlog Space ID

  EnableRotation:
    Type: String
    Default: "false"
    AllowedValues:
      - "true"
      - "false"
    Description: Enable automatic secret rotation

Conditions:
  EnableRotation: !Equals [!Ref EnableRotation, "true"]

Outputs:
  SlackSecretsArn:
    Description: ARN of the Slack secrets
    Value: !Ref SlackSecrets
    Export:
      Name: !Sub ${AWS::StackName}-SlackSecretsArn

  BacklogSecretsArn:
    Description: ARN of the Backlog secrets
    Value: !Ref BacklogSecrets
    Export:
      Name: !Sub ${AWS::StackName}-BacklogSecretsArn
